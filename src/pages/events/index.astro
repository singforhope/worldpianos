---
import MainLayout from "../../layouts/MainLayout.astro";
import mockData from "../../data/mockData.json";
---

<MainLayout>
    <div class="container mx-auto p-4">
        <div class="card bg-base-100">
            <div class="card-body">
                <h1 class="card-title text-2xl mb-4">Events Calendar</h1>

                <!-- Mobile Tabs -->
                <div class="tabs tabs-boxed lg:hidden mb-4">
                    <a class="tab mobile-tab tab-active" data-tab="calendar"
                        >Calendar</a
                    >
                    <a class="tab mobile-tab" data-tab="events">Events List</a>
                </div>

                <!-- Split View Container -->
                <div class="flex flex-col lg:flex-row gap-4">
                    <!-- Calendar View -->
                    <div class="w-full lg:w-2/3" id="calendar-tab">
                        <div id="calendar" class="w-full"></div>
                    </div>

                    <!-- Events List View -->
                    <div
                        class="w-full lg:w-1/3 hidden lg:block"
                        id="events-tab"
                    >
                        <div class="bg-base-200 rounded-lg p-4">
                            <!-- Events Type Tabs -->
                            <div class="tabs tabs-boxed mb-4">
                                <a
                                    class="tab event-type-tab tab-active"
                                    data-events-type="upcoming">Upcoming</a
                                >
                                <a
                                    class="tab event-type-tab"
                                    data-events-type="past">Past</a
                                >
                            </div>
                            <div class="space-y-4" id="events-list">
                                <!-- Events will be populated by JavaScript -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</MainLayout>

<script>
    import { Calendar } from "@fullcalendar/core";
    import dayGridPlugin from "@fullcalendar/daygrid";
    import interactionPlugin from "@fullcalendar/interaction";

    // Define events data with March 2025 dates
    const eventsData = [
        {
            id: "e1",
            title: "Central Park Piano Festival",
            location: "Central Park, New York, NY",
            start: "2025-03-15T14:00:00",
            description: "Annual piano festival featuring local musicians",
            type: "Festival",
            pianoId: "p1",
        },
        {
            id: "e2",
            title: "London Piano Recital",
            location: "British Library, London, UK",
            start: "2025-03-20T19:00:00",
            description: "Evening recital featuring classical masterpieces",
            type: "Recital",
            pianoId: "p2",
        },
        {
            id: "e3",
            title: "Tokyo Station Jazz Night",
            location: "Tokyo Station, Tokyo, Japan",
            start: "2025-03-25T20:00:00",
            description: "Jazz performance featuring local artists",
            type: "Concert",
            pianoId: "p3",
        },
    ];

    // Helper function to filter events
    function filterEvents(events: any[], type: "upcoming" | "past") {
        const now = new Date();
        return events.filter((event) => {
            const eventDate = new Date(event.start);
            return type === "upcoming" ? eventDate >= now : eventDate < now;
        });
    }

    // Function to render events list
    function renderEventsList(events: any[]) {
        const eventsList = document.getElementById("events-list");
        if (eventsList) {
            if (events.length === 0) {
                eventsList.innerHTML =
                    '<p class="text-center opacity-70">No events found</p>';
                return;
            }

            eventsList.innerHTML = events
                .map(
                    (event) => `
                <div class="card bg-base-100">
                    <div class="card-body p-4">
                        <a href="/events/${event.id}" target="_blank" class="hover:opacity-80 transition-opacity">
                            <h3 class="font-medium">${event.title}</h3>
                            <p class="text-sm opacity-70">${event.location}</p>
                            <p class="text-sm opacity-70">${new Date(
                                event.start,
                            ).toLocaleDateString("en-US", {
                                weekday: "long",
                                year: "numeric",
                                month: "long",
                                day: "numeric",
                                hour: "2-digit",
                                minute: "2-digit",
                            })}</p>
                            <div class="mt-2">
                                <span class="badge badge-sm">${event.type}</span>
                            </div>
                        </a>
                    </div>
                </div>
            `,
                )
                .join("");
        }
    }

    // Calendar initialization
    document.addEventListener("DOMContentLoaded", function () {
        const calendarEl = document.getElementById("calendar");
        if (calendarEl) {
            const calendar = new Calendar(calendarEl, {
                plugins: [dayGridPlugin, interactionPlugin],
                initialView: "dayGridMonth",
                headerToolbar: {
                    left: "prev,next today",
                    center: "title",
                    right: "dayGridMonth,dayGridWeek,dayGridDay",
                },
                editable: true,
                selectable: true,
                selectMirror: true,
                dayMaxEvents: true,
                weekends: true,
                height: "auto",
                contentHeight: "auto",
                aspectRatio: 1.8,
                events: eventsData.map((event) => ({
                    id: event.id,
                    title: event.title,
                    start: event.start,
                    extendedProps: {
                        location: event.location,
                        description: event.description,
                        type: event.type,
                    },
                })),
                eventClick: function (info) {
                    window.open(`/events/${info.event.id}`, "_blank");
                },
            });
            calendar.render();
        }

        // Initial render of upcoming events
        renderEventsList(filterEvents(eventsData, "upcoming"));

        // Events type tab switching
        const eventTypeTabs = document.querySelectorAll(".event-type-tab");
        eventTypeTabs.forEach((tab) => {
            tab.addEventListener("click", () => {
                // Update active tab
                eventTypeTabs.forEach((t) => t.classList.remove("tab-active"));
                tab.classList.add("tab-active");

                // Show filtered events
                const type = tab.getAttribute("data-events-type") as
                    | "upcoming"
                    | "past";
                renderEventsList(filterEvents(eventsData, type));
            });
        });

        // Mobile tab switching
        const mobileTabs = document.querySelectorAll(".mobile-tab");
        const calendarTab = document.getElementById("calendar-tab");
        const eventsTab = document.getElementById("events-tab");

        mobileTabs.forEach((tab) => {
            tab.addEventListener("click", () => {
                // Update active tab
                mobileTabs.forEach((t) => t.classList.remove("tab-active"));
                tab.classList.add("tab-active");

                // Show/hide content
                if (tab.getAttribute("data-tab") === "calendar") {
                    calendarTab?.classList.remove("hidden");
                    eventsTab?.classList.add("hidden");
                } else {
                    calendarTab?.classList.add("hidden");
                    eventsTab?.classList.remove("hidden");
                }
            });
        });
    });
</script>

<style>
    /* Custom styles for calendar */
    .fc-event {
        cursor: pointer;
        transition: transform 0.2s;
    }
    .fc-event:hover {
        transform: scale(1.02);
    }
</style>
