---
import MainLayout from "../../layouts/MainLayout.astro";
import mockData from "../../data/mockData.json";

const { id } = Astro.params;
const event = mockData.events.find((e) => e.id === id);
---

<MainLayout>
    <div class="container mx-auto px-4 py-8">
        {
            event ? (
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    {/* Event Information Card */}
                    <div class="card bg-base-100 shadow-xl">
                        <div class="card-body">
                            <h1 class="card-title text-3xl">{event.name}</h1>
                            <div class="flex flex-wrap gap-2 mt-4">
                                <div class="badge badge-primary">
                                    {event.type}
                                </div>
                                <div class="badge badge-success">
                                    {event.date}
                                </div>
                                <div class="badge badge-info">{event.time}</div>
                            </div>
                            <div class="mt-6 space-y-4">
                                <div>
                                    <h2 class="text-xl font-semibold">
                                        Location
                                    </h2>
                                    <p class="text-base-content/70">
                                        {event.location}
                                    </p>
                                </div>
                                <div>
                                    <h2 class="text-xl font-semibold">
                                        Description
                                    </h2>
                                    <p class="text-base-content/70">
                                        {event.description}
                                    </p>
                                </div>
                                <div>
                                    <h2 class="text-xl font-semibold">
                                        Related Piano
                                    </h2>
                                    <p class="text-base-content/70">
                                        {event.pianoId}
                                    </p>
                                </div>
                            </div>
                            <div class="card-actions justify-end mt-6">
                                <button
                                    onclick={`openReportEventModal('${event.name.replace(/'/g, "\\'")}', '${event.id}')`}
                                    class="btn btn-outline btn-error"
                                >
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                                    </svg>
                                    Report Issue
                                </button>
                                <a
                                    href={`/map?pianoId=${event.pianoId}`}
                                    class="btn btn-primary"
                                >
                                    View Piano on Map
                                </a>
                            </div>
                        </div>
                    </div>

                    {/* Map Card */}
                    <div class="card bg-base-100 shadow-xl">
                        <div class="card-body">
                            <h2 class="card-title">Location Map</h2>
                            <div
                                id="event-map"
                                class="w-full h-[600px] rounded-lg"
                            />
                        </div>
                    </div>
                </div>
            ) : (
                <div class="alert alert-error">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="stroke-current shrink-0 h-6 w-6"
                        fill="none"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"
                        />
                    </svg>
                    <span>Event not found</span>
                </div>
            )
        }
    </div>
</MainLayout>

<script>
    import mapboxgl from "mapbox-gl";
    mapboxgl.accessToken =
        "pk.eyJ1Ijoic2ZoYWRtaW4iLCJhIjoiY2t6bWZnY2VhNWY0djJwdHZhZnpvY3prbSJ9.5vyd64pGtGwl9YfMNFH9eQ";

    // Get event data from the page
    const eventData = {
        id: document
            .querySelector("[data-event-id]")
            ?.getAttribute("data-event-id"),
        coordinates: JSON.parse(
            document
                .querySelector("[data-event-coordinates]")
                ?.getAttribute("data-event-coordinates") || "[0,0]",
        ),
        name: document
            .querySelector("[data-event-name]")
            ?.getAttribute("data-event-name"),
        location: document
            .querySelector("[data-event-location]")
            ?.getAttribute("data-event-location"),
    };

    const map = new mapboxgl.Map({
        container: "event-map",
        style: "mapbox://styles/mapbox/navigation-day-v1",
        center: eventData.coordinates,
        zoom: 15,
        pitch: 60,
        bearing: 0,
    });

    map.on("load", () => {
        // Add navigation controls
        map.addControl(new mapboxgl.NavigationControl(), "top-right");

        // Add marker
        new mapboxgl.Marker({
            color: "#FF0000",
            scale: 0.8,
        })
            .setLngLat(eventData.coordinates)
            .addTo(map);

        // Add popup
        new mapboxgl.Popup({ offset: 25 })
            .setLngLat(eventData.coordinates)
            .setHTML(
                `
                <div class="p-2">
                    <h3 class="font-bold text-lg">${eventData.name}</h3>
                    <p class="text-sm text-base-content/70">${eventData.location}</p>
                </div>
            `,
            )
            .addTo(map);
    });
</script>

<style>
    @import "https://unpkg.com/mapbox-gl@2.15.0/dist/mapbox-gl.css";

    #event-map {
        border-radius: 0.5rem;
    }
</style>

{/* Add data attributes for the event information */}
{
    event && (
        <div
            data-event-id={event.id}
            data-event-coordinates={JSON.stringify(event.coordinates)}
            data-event-name={event.name}
            data-event-location={event.location}
            class="hidden"
        />
    )
}
