---
import MainLayout from "../../layouts/MainLayout.astro";
import { isAuthenticated, getCurrentUser } from "../../utils/authUtils";

// Check if user is authenticated
const authenticated = await isAuthenticated();
const user = await getCurrentUser();

// Redirect if not authenticated
if (!authenticated || !user) {
    return Astro.redirect('/auth?error=You must be logged in to view your settings');
}
---

<MainLayout>
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-8">Account Settings</h1>
        
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Settings Navigation -->
            <div class="lg:col-span-1">
                <div class="card bg-base-100 shadow-xl">
                    <div class="card-body">
                        <h2 class="card-title">Settings</h2>
                        <ul class="menu bg-base-100 w-full p-0">
                            <li>
                                <a class="active" id="password-tab">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                    </svg>
                                    Password
                                </a>
                            </li>
                            <li>
                                <a id="notifications-tab">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
                                    </svg>
                                    Notifications
                                </a>
                            </li>
                            <li>
                                <a id="privacy-tab">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                                    </svg>
                                    Privacy
                                </a>
                            </li>
                            <li>
                                <a id="account-tab">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                    </svg>
                                    Account
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            
            <!-- Settings Content -->
            <div class="lg:col-span-2">
                <!-- Password Tab -->
                <div id="password-content" class="card bg-base-100 shadow-xl">
                    <div class="card-body">
                        <h2 class="card-title">Change Password</h2>
                        <p class="text-base-content/70 mb-4">Update your password to keep your account secure.</p>
                        
                        <form id="password-form" class="space-y-4">
                            <div class="form-control">
                                <label class="label">
                                    <span class="label-text">Current Password</span>
                                </label>
                                <input type="password" id="current-password" name="current_password" class="input input-bordered" />
                            </div>
                            
                            <div class="form-control">
                                <label class="label">
                                    <span class="label-text">New Password</span>
                                </label>
                                <input type="password" id="new-password" name="new_password" class="input input-bordered" />
                                <label class="label">
                                    <span class="label-text-alt">Must be at least 6 characters</span>
                                </label>
                            </div>
                            
                            <div class="form-control">
                                <label class="label">
                                    <span class="label-text">Confirm New Password</span>
                                </label>
                                <input type="password" id="confirm-password" name="confirm_password" class="input input-bordered" />
                            </div>
                            
                            <div id="password-status" class="mt-4 text-sm hidden"></div>
                            
                            <div class="form-control mt-6">
                                <button type="submit" id="save-password" class="btn btn-primary">Update Password</button>
                            </div>
                        </form>
                    </div>
                </div>
                
                <!-- Notifications Tab -->
                <div id="notifications-content" class="card bg-base-100 shadow-xl hidden">
                    <div class="card-body">
                        <h2 class="card-title">Notification Settings</h2>
                        <p class="text-base-content/70 mb-4">Manage how you receive notifications.</p>
                        
                        <form id="notifications-form" class="space-y-4">
                            <div class="form-control">
                                <label class="label cursor-pointer">
                                    <span class="label-text">Email Notifications</span>
                                    <input type="checkbox" class="toggle toggle-primary" checked />
                                </label>
                            </div>
                            
                            <div class="form-control">
                                <label class="label cursor-pointer">
                                    <span class="label-text">New Piano Alerts</span>
                                    <input type="checkbox" class="toggle toggle-primary" checked />
                                </label>
                            </div>
                            
                            <div class="form-control">
                                <label class="label cursor-pointer">
                                    <span class="label-text">Event Reminders</span>
                                    <input type="checkbox" class="toggle toggle-primary" checked />
                                </label>
                            </div>
                            
                            <div class="form-control">
                                <label class="label cursor-pointer">
                                    <span class="label-text">Marketing Emails</span>
                                    <input type="checkbox" class="toggle toggle-primary" />
                                </label>
                            </div>
                            
                            <div id="notifications-status" class="mt-4 text-sm hidden"></div>
                            
                            <div class="form-control mt-6">
                                <button type="submit" id="save-notifications" class="btn btn-primary">Save Preferences</button>
                            </div>
                        </form>
                    </div>
                </div>
                
                <!-- Privacy Tab -->
                <div id="privacy-content" class="card bg-base-100 shadow-xl hidden">
                    <div class="card-body">
                        <h2 class="card-title">Privacy Settings</h2>
                        <p class="text-base-content/70 mb-4">Manage your privacy preferences.</p>
                        
                        <form id="privacy-form" class="space-y-4">
                            <div class="form-control">
                                <label class="label cursor-pointer">
                                    <span class="label-text">Show my profile to other users</span>
                                    <input type="checkbox" class="toggle toggle-primary" checked />
                                </label>
                            </div>
                            
                            <div class="form-control">
                                <label class="label cursor-pointer">
                                    <span class="label-text">Show my contributions on the map</span>
                                    <input type="checkbox" class="toggle toggle-primary" checked />
                                </label>
                            </div>
                            
                            <div class="form-control">
                                <label class="label cursor-pointer">
                                    <span class="label-text">Allow location tracking</span>
                                    <input type="checkbox" class="toggle toggle-primary" />
                                </label>
                            </div>
                            
                            <div id="privacy-status" class="mt-4 text-sm hidden"></div>
                            
                            <div class="form-control mt-6">
                                <button type="submit" id="save-privacy" class="btn btn-primary">Save Privacy Settings</button>
                            </div>
                        </form>
                    </div>
                </div>
                
                <!-- Account Tab -->
                <div id="account-content" class="card bg-base-100 shadow-xl hidden">
                    <div class="card-body">
                        <h2 class="card-title">Account Management</h2>
                        <p class="text-base-content/70 mb-4">Manage your account settings.</p>
                        
                        <div class="space-y-4">
                            <div class="form-control">
                                <label class="label">
                                    <span class="label-text">Email Address</span>
                                </label>
                                <input type="email" value={user.email} class="input input-bordered" disabled />
                            </div>
                            
                            <div class="form-control">
                                <label class="label">
                                    <span class="label-text">Account Created</span>
                                </label>
                                <input type="text" value={new Date(user.created_at).toLocaleDateString()} class="input input-bordered" disabled />
                            </div>
                            
                            <div class="divider"></div>
                            
                            <div class="space-y-2">
                                <h3 class="font-semibold">Danger Zone</h3>
                                <p class="text-sm text-base-content/70">These actions are irreversible.</p>
                                
                                <button id="delete-account" class="btn btn-error btn-outline mt-2">Delete Account</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</MainLayout>

<script>
    // @ts-nocheck
    import { createClient } from '@supabase/supabase-js';
    
    const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
    const supabaseAnonKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
    const supabase = createClient(supabaseUrl, supabaseAnonKey);
    
    document.addEventListener('DOMContentLoaded', () => {
        // Tab switching
        const tabs = {
            password: {
                tab: document.getElementById('password-tab'),
                content: document.getElementById('password-content')
            },
            notifications: {
                tab: document.getElementById('notifications-tab'),
                content: document.getElementById('notifications-content')
            },
            privacy: {
                tab: document.getElementById('privacy-tab'),
                content: document.getElementById('privacy-content')
            },
            account: {
                tab: document.getElementById('account-tab'),
                content: document.getElementById('account-content')
            }
        };
        
        // Function to switch tabs
        function switchTab(tabName) {
            // Hide all content
            Object.values(tabs).forEach(({ tab, content }) => {
                tab.classList.remove('active');
                content.classList.add('hidden');
            });
            
            // Show selected tab
            tabs[tabName].tab.classList.add('active');
            tabs[tabName].content.classList.remove('hidden');
        }
        
        // Add click event listeners to tabs
        Object.entries(tabs).forEach(([name, { tab }]) => {
            tab.addEventListener('click', () => switchTab(name));
        });
        
        // Password form submission
        const passwordForm = document.getElementById('password-form');
        const savePasswordBtn = document.getElementById('save-password');
        
        passwordForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const currentPassword = document.getElementById('current-password').value;
            const newPassword = document.getElementById('new-password').value;
            const confirmPassword = document.getElementById('confirm-password').value;
            
            if (!currentPassword || !newPassword || !confirmPassword) {
                showStatus('password', 'error', 'Please fill in all fields');
                return;
            }
            
            if (newPassword.length < 6) {
                showStatus('password', 'error', 'New password must be at least 6 characters');
                return;
            }
            
            if (newPassword !== confirmPassword) {
                showStatus('password', 'error', 'New passwords do not match');
                return;
            }
            
            savePasswordBtn.disabled = true;
            savePasswordBtn.textContent = 'Updating...';
            
            try {
                // Sign in with current password to verify
                const { error: signInError } = await supabase.auth.signInWithPassword({
                    email: (await supabase.auth.getUser()).data.user.email,
                    password: currentPassword
                });
                
                if (signInError) {
                    throw new Error('Current password is incorrect');
                }
                
                // Update password
                const { error: updateError } = await supabase.auth.updateUser({
                    password: newPassword
                });
                
                if (updateError) {
                    throw updateError;
                }
                
                showStatus('password', 'success', 'Password updated successfully!');
                passwordForm.reset();
            } catch (error) {
                console.error('Error updating password:', error);
                showStatus('password', 'error', error.message || 'Error updating password');
            } finally {
                savePasswordBtn.disabled = false;
                savePasswordBtn.textContent = 'Update Password';
            }
        });
        
        // Notifications form submission
        const notificationsForm = document.getElementById('notifications-form');
        const saveNotificationsBtn = document.getElementById('save-notifications');
        
        notificationsForm.addEventListener('submit', (e) => {
            e.preventDefault();
            
            saveNotificationsBtn.disabled = true;
            saveNotificationsBtn.textContent = 'Saving...';
            
            // Simulate saving
            setTimeout(() => {
                showStatus('notifications', 'success', 'Notification preferences saved!');
                saveNotificationsBtn.disabled = false;
                saveNotificationsBtn.textContent = 'Save Preferences';
            }, 1000);
        });
        
        // Privacy form submission
        const privacyForm = document.getElementById('privacy-form');
        const savePrivacyBtn = document.getElementById('save-privacy');
        
        privacyForm.addEventListener('submit', (e) => {
            e.preventDefault();
            
            savePrivacyBtn.disabled = true;
            savePrivacyBtn.textContent = 'Saving...';
            
            // Simulate saving
            setTimeout(() => {
                showStatus('privacy', 'success', 'Privacy settings saved!');
                savePrivacyBtn.disabled = false;
                savePrivacyBtn.textContent = 'Save Privacy Settings';
            }, 1000);
        });
        
        // Delete account
        const deleteAccountBtn = document.getElementById('delete-account');
        
        deleteAccountBtn.addEventListener('click', () => {
            if (confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
                alert('This feature is not yet implemented.');
            }
        });
        
        // Function to show status messages
        function showStatus(formName, type, message) {
            const statusEl = document.getElementById(`${formName}-status`);
            statusEl.textContent = message;
            statusEl.className = `mt-4 text-sm ${type === 'error' ? 'text-error' : 'text-success'}`;
            statusEl.classList.remove('hidden');
        }
    });
</script>