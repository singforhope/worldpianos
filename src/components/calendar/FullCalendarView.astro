---
// FullCalendarView.astro - A calendar component using FullCalendar
interface Props {
  events: any[];
}

const { events } = Astro.props;
---

<div class="calendar-container">
  <div id="calendar"></div>
</div>

<!-- Include FullCalendar CSS and JS from CDN -->
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

<script define:vars={{ events }}>
  // Initialize FullCalendar when the document is ready
  document.addEventListener('DOMContentLoaded', function() {
    try {
      // Access the FullCalendar global object
      const { Calendar } = FullCalendar;
      
      // Get the calendar element
      const calendarEl = document.getElementById('calendar');
      
      // Initialize the calendar
      const calendar = new Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        headerToolbar: {
          left: 'prev,next today',
          center: 'title',
          right: 'dayGridMonth,timeGridWeek,listMonth'
        },
        events: events,
        eventClick: function(info) {
          // Show event details when clicked
          const event = info.event;
          
          // Create modal content
          let modalContent = `
            <div class="modal-box">
              <h3 class="font-bold text-lg">${event.title}</h3>
              <div class="divider my-1"></div>
              <div class="grid grid-cols-[auto_1fr] gap-2 items-start mb-4">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="mt-1" viewBox="0 0 16 16">
                  <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z"/>
                </svg>
                <p>${new Date(event.start).toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</p>
                
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="mt-1" viewBox="0 0 16 16">
                  <path d="M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 1 0-6 3 3 0 0 1 0 6z"/>
                </svg>
                <p>${event.extendedProps.location || 'Location not specified'}</p>
                
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="mt-1" viewBox="0 0 16 16">
                  <path d="M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z"/>
                  <path d="M7 5.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm-1.496-.854a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 1 1 .708-.708l.146.147 1.146-1.147a.5.5 0 0 1 .708 0zM7 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm-1.496-.854a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 0 1 .708-.708l.146.147 1.146-1.147a.5.5 0 0 1 .708 0z"/>
                </svg>
                <p>${event.extendedProps.type || 'Type not specified'}</p>
              </div>
              <div class="modal-action">
                <a href="/events/${event.id}" class="btn btn-primary">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="mr-1" viewBox="0 0 16 16">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                    <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                  </svg>
                  View Details
                </a>
                <button class="btn" onclick="document.getElementById('event-details-modal').close()">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="mr-1" viewBox="0 0 16 16">
                    <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
                  </svg>
                  Close
                </button>
              </div>
            </div>
          `;
          
          // Get or create modal
          let modal = document.getElementById('event-details-modal');
          if (!modal) {
            modal = document.createElement('dialog');
            modal.id = 'event-details-modal';
            modal.className = 'modal modal-bottom sm:modal-middle';
            document.body.appendChild(modal);
          }
          
          // Set modal content and show
          modal.innerHTML = modalContent;
          modal.showModal();
          
          // Add event listener to close button
          const closeButton = modal.querySelector('button');
          if (closeButton) {
            closeButton.addEventListener('click', () => {
              modal.close();
            });
          }
        },
        // Customize the appearance
        eventTimeFormat: {
          hour: '2-digit',
          minute: '2-digit',
          meridiem: 'short'
        },
        // Make the calendar responsive
        height: 'auto',
        // Add some custom styling
        eventDidMount: function(info) {
          // Add hover effect
          info.el.addEventListener('mouseenter', function() {
            info.el.style.transform = 'translateY(-1px)';
            info.el.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            info.el.style.transition = 'all 0.2s ease';
          });
          
          info.el.addEventListener('mouseleave', function() {
            info.el.style.transform = '';
            info.el.style.boxShadow = '';
          });
        }
      });
      
      // Render the calendar
      calendar.render();
      
      console.log('FullCalendar initialized with events:', events);
    } catch (error) {
      console.error('Error initializing FullCalendar:', error);
    }
  });
</script>

<style>
  .calendar-container {
    margin-bottom: 2rem;
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
    background-color: white;
  }
  
  /* Custom styling for FullCalendar */
  :global(.fc) {
    --fc-border-color: rgba(226, 232, 240, 0.5);
    --fc-button-bg-color: hsl(var(--p));
    --fc-button-border-color: hsl(var(--p));
    --fc-button-hover-bg-color: hsl(var(--pf));
    --fc-button-hover-border-color: hsl(var(--pf));
    --fc-button-active-bg-color: hsl(var(--p));
    --fc-button-active-border-color: hsl(var(--p));
    --fc-event-bg-color: hsl(var(--p));
    --fc-event-border-color: hsl(var(--p));
    --fc-today-bg-color: rgba(240, 249, 255, 0.7);
  }
  
  :global(.fc-theme-standard td), :global(.fc-theme-standard th) {
    border-color: rgba(226, 232, 240, 0.5);
  }
  
  :global(.fc-daygrid-day-number) {
    font-weight: bold;
    color: hsl(var(--p));
  }
  
  :global(.fc-daygrid-day.fc-day-today) {
    background-color: rgba(240, 249, 255, 0.7);
  }
  
  :global(.fc-button-primary) {
    border-radius: 0.375rem;
    text-transform: capitalize;
    font-weight: 500;
  }
  
  :global(.fc-button-primary:not(:disabled):active),
  :global(.fc-button-primary:not(:disabled).fc-button-active) {
    background-color: hsl(var(--pf));
    border-color: hsl(var(--pf));
  }
  
  :global(.fc-event) {
    border-radius: 0.25rem;
    padding: 0.15rem 0.3rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  :global(.fc-h-event .fc-event-title) {
    font-weight: 600;
  }
  
  /* Modal styling */
  :global(.modal) {
    background-color: rgba(0, 0, 0, 0.5);
  }
  
  :global(.modal-box) {
    background-color: white;
    border-radius: 0.5rem;
    padding: 1.5rem;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    :global(.fc-toolbar.fc-header-toolbar) {
      flex-direction: column;
      gap: 0.5rem;
    }
    
    :global(.fc-toolbar-chunk) {
      display: flex;
      justify-content: center;
    }
  }
</style>