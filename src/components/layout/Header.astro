---
// Header.astro
import Results from "../search/Results.astro";
import Location from "../search/Location.astro";

const isLoggedIn = true; // This would come from your auth system
const currentPath = Astro.url.pathname;
const searchQuery = Astro.url.searchParams.get("q") || "";

// Helper function to check if a link is active
const isActive = (path: string) => currentPath.startsWith(path);
---

<header class="navbar bg-base-100 shadow-lg sticky top-0 z-50">
    <!-- Left Section: Logo and Navigation -->
    <div class="navbar-start flex-1">
        <!-- Mobile Menu -->
        <div class="dropdown lg:hidden">
            <label tabindex="0" class="btn btn-ghost">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-5 w-5"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M4 6h16M4 12h8m-8 6h16"></path>
                </svg>
            </label>
            <ul
                tabindex="0"
                class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52 animate-fadeInDown"
            >
                <li>
                    <a
                        href="/map"
                        class={`${isActive("/map") ? "bg-primary text-primary-content font-semibold" : ""} hover:bg-primary hover:text-primary-content`}
                        >Map</a
                    >
                </li>
                <li>
                    <a
                        href="/events"
                        class={`${isActive("/events") ? "bg-primary text-primary-content font-semibold" : ""} hover:bg-primary hover:text-primary-content`}
                        >Events</a
                    >
                </li>
                <li>
                    <a
                        href="/about"
                        class={`${isActive("/about") ? "bg-primary text-primary-content font-semibold" : ""} hover:bg-primary hover:text-primary-content`}
                        >About</a
                    >
                </li>
            </ul>
        </div>
        <!-- Logo -->
        <a href="/" class="btn btn-ghost normal-case text-xl">
            <span class="text-primary">World</span>Pianos
        </a>
        <!-- Desktop Menu -->
        <ul class="menu menu-horizontal px-1 hidden lg:flex">
            <li>
                <a
                    href="/map"
                    class={`${isActive("/map") ? "bg-primary text-primary-content font-semibold" : ""} hover:bg-primary hover:text-primary-content`}
                    >Map</a
                >
            </li>
            <li>
                <a
                    href="/events"
                    class={`${isActive("/events") ? "bg-primary text-primary-content font-semibold" : ""} hover:bg-primary hover:text-primary-content`}
                    >Events</a
                >
            </li>
            <li>
                <a
                    href="/about"
                    class={`${isActive("/about") ? "bg-primary text-primary-content font-semibold" : ""} hover:bg-primary hover:text-primary-content`}
                    >About</a
                >
            </li>
        </ul>
    </div>

    <!-- Middle Section: Search -->
    <div class="navbar-center flex-1 justify-center relative">
        <form class="form-control w-full max-w-xl" id="search-form">
            <div class="input-group input-group-horizontal flex">
                <input
                    type="text"
                    id="search-input"
                    name="q"
                    value={searchQuery}
                    placeholder="Search pianos..."
                    class="input input-bordered w-full"
                />
                <button type="submit" class="btn btn-square btn-primary">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-5 w-5"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                        ></path>
                    </svg>
                </button>
            </div>
        </form>
        <Results isVisible={searchQuery.length > 0} searchQuery={searchQuery} />
    </div>

    <!-- Right Section: User Controls -->
    <div class="navbar-end flex-1 justify-end mr-2">
        <!-- Location Button -->
        <Location className="mr-2" />

        <!-- Add Piano Button -->
        <button class="btn btn-primary btn-outline btn-sm mr-2 hidden sm:flex">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 4v16m8-8H4"></path>
            </svg>
            Add Piano
        </button>

        {
            !isLoggedIn ? (
                <div class="flex items-center gap-2">
                    <a href="/auth" class="btn btn-primary btn-sm">
                        Login or Sign Up
                    </a>
                </div>
            ) : (
                <div class="dropdown dropdown-end ml-2">
                    <label tabindex="0" class="btn btn-ghost btn-circle avatar">
                        <div class="w-10 rounded-full">
                            <img
                                src="https://picsum.photos/100/100"
                                alt="User avatar"
                            />
                        </div>
                    </label>
                    <ul
                        tabindex="0"
                        class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52"
                    >
                        <li class="menu-title">
                            <span>Michael Chen</span>
                        </li>
                        <li>
                            <a>
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    class="h-5 w-5"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke="currentColor"
                                >
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                                    />
                                </svg>
                                Profile
                            </a>
                        </li>
                        <li>
                            <a>
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    class="h-5 w-5"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke="currentColor"
                                >
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
                                    />
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                                    />
                                </svg>
                                Settings
                            </a>
                        </li>
                        <li>
                            <a id="theme-toggle">
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    class="h-5 w-5"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke="currentColor"
                                >
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
                                    />
                                </svg>
                                <span class="theme-text">Dark Mode</span>
                            </a>
                        </li>
                        <li>
                            <a>
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    class="h-5 w-5"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke="currentColor"
                                >
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
                                    />
                                </svg>
                                Logout
                            </a>
                        </li>
                    </ul>
                </div>
            )
        }
    </div>
</header>

<script>
    // Theme switcher functionality
    const themeToggle = document.getElementById("theme-toggle");
    const themeText = themeToggle?.querySelector(".theme-text");
    const html = document.documentElement;

    if (themeToggle && themeText) {
        // Toggle theme on click
        themeToggle.addEventListener("click", () => {
            const currentTheme = html.getAttribute("data-theme");
            const newTheme = currentTheme === "light" ? "dark" : "light";

            // Update theme
            html.setAttribute("data-theme", newTheme);
            localStorage.setItem("theme", newTheme);

            // Update text
            themeText.textContent =
                newTheme === "light" ? "Dark Mode" : "Light Mode";
        });

        // Update text based on current theme
        const currentTheme = html.getAttribute("data-theme") || "light";
        themeText.textContent =
            currentTheme === "light" ? "Dark Mode" : "Light Mode";
    }

    // Search functionality
    const searchInput = document.getElementById("search-input");
    const searchResults = document.querySelector(".search-results");
    const searchForm = document.getElementById("search-form");

    if (searchInput && searchResults && searchForm) {
        // Show results on focus
        searchInput.addEventListener("focus", () => {
            searchResults.classList.remove(
                "opacity-0",
                "-translate-y-2",
                "pointer-events-none",
            );
            searchResults.classList.add("opacity-100", "translate-y-0");
        });

        // Handle form submission
        searchForm.addEventListener("submit", (e) => {
            e.preventDefault();
            const searchQuery = searchInput.value.trim();
            if (searchQuery) {
                window.location.href = `/?q=${encodeURIComponent(searchQuery)}`;
            }
        });

        // Hide results when clicking outside
        document.addEventListener("click", (e) => {
            if (
                !searchInput.contains(e.target as Node) &&
                !searchResults?.contains(e.target as Node)
            ) {
                searchResults.classList.remove("opacity-100", "translate-y-0");
                searchResults.classList.add(
                    "opacity-0",
                    "-translate-y-2",
                    "pointer-events-none",
                );
            }
        });

        // Hide results when clicking a result
        searchResults.addEventListener("click", (e) => {
            if ((e.target as HTMLElement).closest("a")) {
                searchResults.classList.remove("opacity-100", "translate-y-0");
                searchResults.classList.add(
                    "opacity-0",
                    "-translate-y-2",
                    "pointer-events-none",
                );
            }
        });
    }
</script>

<style is:global>
    :root {
        color-scheme: light dark;
    }

    /* Ensure theme is applied immediately */
    html[data-theme="dark"] {
        color-scheme: dark;
    }

    html[data-theme="light"] {
        color-scheme: light;
    }

    @keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fadeInDown {
        animation: fadeInDown 0.2s ease-out forwards;
    }
</style>
