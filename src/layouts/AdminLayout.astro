---
import '../styles/global.css';
import { auth, profile } from '../utils/auth';
import { Image } from "astro:assets";
import logo from "../assets/logo.png";

// Authentication check
const authenticated = await auth.isAuthenticated();
const user = await auth.getCurrentUser();

// Initialize variables
let userProfile = null;
let isAdmin = false;
let authFailed = false;
let adminFailed = false;

// Only fetch data if user is authenticated
if (user && authenticated) {
    // Get user profile
    userProfile = await profile.getUserProfile(user.id);
    
    // Check if user is admin
    isAdmin = await profile.isAdmin(user.id);
    
    if (!isAdmin) {
        adminFailed = true;
    }
} else {
    authFailed = true;
}

// Helper function to check if a link is active
const isActive = (path: string) => Astro.url.pathname.startsWith(path);
---

<html data-theme="light">
    <head>
        <title>WorldPianos Admin</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    </head>
    <body>
        <!-- Loading state that will be hidden when auth check completes -->
        <div id="loading-state" class="flex flex-col items-center justify-center h-screen">
            <div class="loading loading-spinner loading-lg"></div>
            <p class="mt-4 text-lg">Loading admin dashboard...</p>
        </div>
        
        <!-- Dashboard content that will be shown when auth check completes -->
        <div id="dashboard-content" class="hidden">
            <div class="drawer lg:drawer-open h-screen">
                <input id="admin-drawer" type="checkbox" class="drawer-toggle" />
                <div class="drawer-content flex flex-col">
                    <!-- Header -->
                    <div class="navbar bg-base-100 shadow-md">
                        <div class="flex-none lg:hidden">
                            <label for="admin-drawer" class="btn btn-square btn-ghost">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-6 h-6 stroke-current"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
                            </label>
                        </div>
                        <div class="flex-1">
                            <a href="/admin/dashboard" class="text-xl font-bold">
                                <span class="text-primary">World</span><span>Pianos</span> Admin
                            </a>
                        </div>
                        <div class="flex-none">
                            <div class="dropdown dropdown-end">
                                <label tabindex="0" class="btn btn-ghost btn-circle avatar">
                                    <div class="w-10 rounded-full">
                                        <img id="header-avatar" src={userProfile?.avatar_url || `https://ui-avatars.com/api/?name=${userProfile?.display_name || 'Admin'}`} alt="Admin avatar" />
                                    </div>
                                </label>
                                <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
                                    <li class="menu-title">
                                        <span id="header-name">{userProfile?.display_name || user?.email?.split('@')[0] || 'Admin'}</span>
                                    </li>
                                    <li><a href="/user/dashboard">User Dashboard</a></li>
                                    <li><a href="/user/profile">Profile</a></li>
                                    <li>
                                        <a id="theme-toggle">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                                            </svg>
                                            <span class="theme-text">Dark Mode</span>
                                        </a>
                                    </li>
                                    <li><button id="logout-btn">Logout</button></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Main content -->
                    <div class="p-4 md:p-6 overflow-y-auto">
                        <slot />
                    </div>
                </div>
                
                <!-- Sidebar -->
                <div class="drawer-side">
                    <label for="admin-drawer" class="drawer-overlay"></label>
                    <div class="menu p-4 w-80 h-full bg-base-200 text-base-content">
                        <div class="flex flex-col items-center mb-6">
                            <a href="/" class="btn btn-ghost normal-case text-xl flex items-center gap-1 px-1 mb-4">
                                <div class="w-7 h-7 md:w-9 md:h-9">
                                    <Image
                                        src={logo}
                                        alt="Worldpianos Logo"
                                    />
                                </div>
                                <span class="text-primary">World</span><span>Pianos</span>
                            </a>
                            <div class="avatar mb-4">
                                <div class="w-24 rounded-full">
                                    <img id="sidebar-avatar" src={userProfile?.avatar_url || `https://ui-avatars.com/api/?name=${userProfile?.display_name || 'Admin'}`} alt="Admin avatar" />
                                </div>
                            </div>
                            <h2 id="sidebar-name" class="text-xl font-bold">{userProfile?.display_name || user?.email?.split('@')[0] || 'Admin'}</h2>
                            <p id="sidebar-email" class="text-base-content/70">{user?.email || 'No email available'}</p>
                            <div class="badge badge-primary mt-2">Admin</div>
                        </div>
                        
                        <div class="divider"></div>
                        
                        <ul class="menu bg-base-200 w-full">
                            <li>
                                <a href="/admin/dashboard" class={isActive("/admin/dashboard") ? "active" : ""}>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                                    </svg>
                                    Dashboard
                                </a>
                            </li>
                            <li>
                                <a href="/admin/pianos" class={isActive("/admin/pianos") ? "active" : ""}>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2a2 2 0 00-2 2" />
                                    </svg>
                                    Manage Pianos
                                </a>
                            </li>
                            <li>
                                <a href="/admin/events" class={isActive("/admin/events") ? "active" : ""}>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                    </svg>
                                    Manage Events
                                </a>
                            </li>
                            <li>
                                <a href="/admin/users" class={isActive("/admin/users") ? "active" : ""}>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                                    </svg>
                                    Manage Users
                                </a>
                            </li>
                            <li>
                                <a href="/admin/reports" class={isActive("/admin/reports") ? "active" : ""}>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                                    </svg>
                                    Manage Reports
                                </a>
                            </li>
                            <li>
                                <a href="/admin/media" class={isActive("/admin/media") ? "active" : ""}>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                    </svg>
                                    Media Management
                                </a>
                            </li>
                            <li>
                                <a href="/admin/settings" class={isActive("/admin/settings") ? "active" : ""}>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                    </svg>
                                    Site Settings
                                </a>
                            </li>
                            <li>
                                <a href="/admin/moderation" class={isActive("/admin/moderation") ? "active" : ""}>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                                    </svg>
                                    Moderation
                                </a>
                            </li>
                        </ul>
                        
                        <div class="divider"></div>
                        
                        <a href="/user/dashboard" class="btn btn-outline btn-primary w-full mb-4">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                            </svg>
                            User Dashboard
                        </a>
                        
                        <button id="sidebar-logout-btn" class="btn btn-outline btn-error w-full">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                            </svg>
                            Logout
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>

<script>
    import { auth, profile } from '../utils/auth';
    
    document.addEventListener('DOMContentLoaded', async () => {
        // Get loading and content elements
        const loadingState = document.getElementById('loading-state');
        const dashboardContent = document.getElementById('dashboard-content');
        
        // Check if user is authenticated on client-side
        const authenticated = await auth.isAuthenticated();
        const user = await auth.getCurrentUser();
        
        // Redirect if not authenticated
        if (!authenticated || !user) {
            // Store the current URL to redirect back after login
            auth.setReturnUrl(window.location.pathname);
            window.location.href = '/auth?error=You must be logged in to access the admin dashboard';
            return;
        }
        
        // Check if user is admin
        const userProfile = await profile.getUserProfile(user.id);
        const isAdmin = await profile.isAdmin(user.id);
        
        if (!isAdmin) {
            window.location.href = '/?error=You do not have permission to access the admin dashboard';
            return;
        }
        
        // Update the UI with the user's data
        const sidebarNameElement = document.getElementById('sidebar-name');
        const sidebarEmailElement = document.getElementById('sidebar-email');
        const sidebarAvatarImg = document.getElementById('sidebar-avatar');
        const headerNameElement = document.getElementById('header-name');
        const headerAvatarImg = document.getElementById('header-avatar');
        
        if (sidebarNameElement) {
            sidebarNameElement.textContent = userProfile?.display_name || user.email?.split('@')[0] || 'Admin';
        }
        
        if (headerNameElement) {
            headerNameElement.textContent = userProfile?.display_name || user.email?.split('@')[0] || 'Admin';
        }
        
        if (sidebarEmailElement) {
            sidebarEmailElement.textContent = user.email || 'No email available';
        }
        
        if (sidebarAvatarImg && userProfile?.avatar_url) {
            (sidebarAvatarImg as HTMLImageElement).src = userProfile.avatar_url;
        }
        
        if (headerAvatarImg && userProfile?.avatar_url) {
            (headerAvatarImg as HTMLImageElement).src = userProfile.avatar_url;
        }
        
        // Hide loading state and show dashboard content
        if (loadingState) loadingState.classList.add('hidden');
        if (dashboardContent) dashboardContent.classList.remove('hidden');
        
        // Setup logout buttons
        const logoutBtn = document.getElementById('logout-btn');
        const sidebarLogoutBtn = document.getElementById('sidebar-logout-btn');
        
        const handleLogout = async (e: Event) => {
            e.preventDefault();
            const { error } = await auth.signOut();
            // Redirect to home page regardless of error
            window.location.href = '/';
        };
        
        if (logoutBtn) {
            logoutBtn.addEventListener('click', handleLogout);
        }
        
        if (sidebarLogoutBtn) {
            sidebarLogoutBtn.addEventListener('click', handleLogout);
        }
        
        // Theme switcher functionality
        const themeToggle = document.getElementById("theme-toggle");
        const themeText = themeToggle?.querySelector(".theme-text");
        const html = document.documentElement;
        
        if (themeToggle && themeText) {
            // Toggle theme on click
            themeToggle.addEventListener("click", () => {
                const currentTheme = html.getAttribute("data-theme");
                const newTheme = currentTheme === "light" ? "dark" : "light";
                
                // Update theme
                html.setAttribute("data-theme", newTheme);
                localStorage.setItem("theme", newTheme);
                
                // Update text
                themeText.textContent = newTheme === "light" ? "Dark Mode" : "Light Mode";
            });
            
            // Update text based on current theme
            const currentTheme = localStorage.getItem("theme") || "light";
            html.setAttribute("data-theme", currentTheme);
            themeText.textContent = currentTheme === "light" ? "Dark Mode" : "Light Mode";
        }
    });
</script>

<style is:global>
    /* Ensure theme is applied immediately */
    html[data-theme="dark"] {
        color-scheme: dark;
    }

    html[data-theme="light"] {
        color-scheme: light;
    }
    
    /* Active link styling */
    .menu a.active {
        background-color: hsl(var(--p));
        color: hsl(var(--pc));
    }
</style>